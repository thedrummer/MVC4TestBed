@using Web
@model MVC4TestBed.Models.SortInfo

@{
    var isDescending = string.CompareOrdinal(Model.SortBy, ViewData["ColumnName"].ToString()) == 0 && Model.SortAscending;
    var routeData = new RouteValueDictionary {{"SortBy", ViewData["ColumnName"].ToString()}, {"SortAscending", !isDescending}};

    // Add in the querystring parameters *except* for the paging ones (as sorting should send us back to the first page of data)
    routeData.AddQueryStringParameters().ExceptFor("CurrentPage", "ItemsPerPage");

    var htmlAttributes = new Dictionary<string, object> {}; //{{"class", "plain"}}};
}

@Html.ActionLink(
    ViewData["DisplayName"].ToString(), // Link Text
    Html.ViewContext.RouteData.Values["action"].ToString(), // Action
    Html.ViewContext.RouteData.Values["controller"].ToString(), // Controller
    routeData, // Route data
    htmlAttributes // HTML attributes to apply to hyperlink
     )

@if (string.CompareOrdinal(Model.SortBy, ViewData["ColumnName"].ToString()) == 0)
{
    if (Model.SortAscending)
    {
        <i class="icon-chevron-up pull-right"></i>
    }
    else
    {
        <i class="icon-chevron-down pull-right"></i>
    }
}
